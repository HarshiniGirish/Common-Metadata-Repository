#
# API Endpoints
#
estimateSize:
  handler: cmr.sizing.app.handler.estimate_size
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}  
  events:
    - http:
        method: get
        path: /service-bridge/size-estimate/collection/{concept-id}
    - http:
        method: post
        path: /service-bridge/size-estimate/collection/{concept-id}

streamSizeEstimate:
  handler: cmr.sizing.app.handler.stream_estimate_size
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}   
  events:
    - http:
        method: get
        path: /service-bridge/size-estimate/streaming-collection/{concept-id}

batchGenerate:
  handler: cmr.ous.app.handler.collection.batch_generate
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}
  events:
    - http:
        method: post
        path: service-bridge/ous/collection

generateUrls:
  handler: cmr.ous.app.handler.collection.generate_urls
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}
  events:
    - http:
        method: get
        path: service-bridge/ous/collection/{concept-id}
    - http:
        method: post
        path: service-bridge/ous/collection/{concept-id}

streamCollectionUrls:
  handler: cmr.ous.app.handler.collection.stream_urls
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}
  events:
    - http:
        method: get
        path: /service-bridge/ous/streaming-collection/{concept-id}

bridgeServices:
  handler: cmr.opendap.app.handler.collection.bridge_services
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}
  events:
    - http:
        method: get
        path: /service-bridge/crossover/collection/{concept-id}

health:
  handler: cmr.opendap.app.handler.core.health
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}
  events:
    - http:
        method: get
        path: /service-bridge/health

healthOptions:
  handler: cmr.http.kit.app.handler.ok
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}
  events:
    - http:
        method: options
        path: /service-bridge/health

#
# Administration Endpoints
#
lookup:
  handler: cmr.ous.app.handler.auth_cache.lookup
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}
  events:
    - http:
        method: get
        path: /service-bridge/cache/auth/{item-key}
    - http:
        method: get
        path: /service-bridge/cache/concept/{item-key}

lookupAll:
  handler: cmr.ous.app.handler.auth_cache.lookup_all
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}
  events:
    - http:
        method: get
        path: /service-bridge/cache/auth
    - http:
        method: get
        path: /service-bridge/cache/concept

evict:
  handler: cmr.ous.app.handler.auth_cache.evict
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}
  events:
    - http:
        method: delete
        path: /service-bridge/cache/auth/{item-key}
    - http:
        method: delete
        path: /service-bridge/cache/concept/{item-key}

evictAll:
  handler: cmr.ous.app.handler.auth_cache.evict_all
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}
  events:
    - http:
        method: delete
        path: /service-bridge/cache/auth
    - http:
        method: delete
        path: /service-bridge/cache/concept

ping:
  handler: cmr.opendap.app.handler.core.ping
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}
  events:
    - http:
        method: get
        path: /service-bridge/ping
    - http:
        method: post
        path: /service-bridge/ping

#
# Documentation Endpoints
#
docs:
  handler: cmr.http.kit.app.handler.dynamic_page
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}
  events:
    - http:
        method: get
        path: /service-bridge/docs
    - http:
        method: get
        path: /service-bridge

docs:
  handler: cmr.http.kit.app.handler.permanent_redirect
  timeout: ${env:LAMBDA_TIMEOUT}
  warmup:
    concurrency: ${env:WARM_LAMBDA_COUNT}
  events:
    - http:
        method: get
        path: /service-bridge/robots.txt